{
  "content": "# üìÑ Colle ici tout le contenu de ta page Notion !\r\n\r\n- Ce fichier sert √† transformer ta page en JSON automatiquement.\r\n- Tu peux copier/coller tout le texte, y compris les titres, listes, blocs de code, etc.\r\n- Quand tu as fini, lance :\r\n\r\n    node notion_to_json.js notion_page.txt notion_page.json\r\n\r\n- Le fichier notion_page.json sera g√©n√©r√© avec tout le contenu.\r\n\r\n---\r\n\r\n\r\n# üåê API REST / HTTP\r\n\r\n- ‚úÖ Requ√™tes HTTP de base\r\n    \r\n    ```bash\r\n    curl https://api.site.com/posts        # GET : r√©cup√©rer des donn√©es\r\n    curl -X POST https://api.site.com/...  # POST : envoyer des donn√©es\r\n    curl -X PUT https://api.site.com/...   # PUT : modifier une ressource\r\n    curl -X DELETE https://api.site.com/...# DELETE : supprimer une ressource\r\n    \r\n    ```\r\n    \r\n- üîë Headers & Auth\r\n    \r\n    ```bash\r\n    curl -H \"Authorization: Bearer token\" https://...    # Ajouter token JWT\r\n    curl -H \"Content-Type: application/json\"             # Sp√©cifier type JSON\r\n    curl -H \"Accept: application/json\"                    # Demander JSON en r√©ponse\r\n    curl -H \"User-Agent: MonAgent\"                        # Modifier user-agent (utile tests)\r\n    \r\n    ```\r\n    \r\n- üß∞ Divers\r\n    \r\n    ```bash\r\n    curl -I https://site.com                                  # Afficher uniquement les headers (HEAD)\r\n    curl https://site.com > fichier.html                      # Enregistrer la r√©ponse dans un fichier\r\n    \r\n    curl -v https://site.com                                  # Mode verbeux : voir requ√™te compl√®te (headers, etc.)\r\n    curl --compressed https://site.com                        # Activer compression gzip pour gagner du temps\r\n    \r\n    curl --data \"param1=val1&param2=val2\" https://site.com    # POST avec formulaire url-encoded\r\n    \r\n    curl -X PATCH https://api.site.com/resource               # PATCH : modification partielle\r\n    \r\n    curl --max-time 10 https://site.com                       # Timeout apr√®s 10 secondes\r\n    \r\n    ```\r\n    \r\n\r\n# CSS\r\n\r\n- Display, position,  z-index\r\n    \r\n    ```css\r\n    display: flex;                    /* Active le mode Flexbox */\r\n    display: grid;                    /* Active le mode Grid */\r\n    display: block / inline / none;  /* Type d‚Äôaffichage classique */\r\n    \r\n    position: static / relative / absolute / fixed / sticky;\r\n    top / right / bottom / left: Xpx;   /* Positionnement manuel */\r\n    z-index: 10;                      /* Ordre d‚Äôempilement */\r\n    \r\n    overflow: hidden / scroll / auto;   /* Gestion du d√©bordement */\r\n    cursor: pointer / not-allowed;      /* Apparence du curseur */\r\n    transition: all 0.3s ease;          /* Animation fluide */\r\n    visibility: visible / hidden;       /* Rend invisible sans supprimer l‚Äô√©l√©ment */\r\n    opacity: 0.5;                       /* Transparence */\r\n    overflow-x / overflow-y: hidden / scroll / auto;  /* Contr√¥le par axe */\r\n    \r\n    box-shadow: 0 2px 5px rgba(0,0,0,0.1);  /* Ombre port√©e */\r\n    border-radius: 4px;                     /* Bords arrondis */\r\n    transition: all 0.3s ease-in-out;       /* Transition fluide */\r\n    \r\n    ```\r\n    \r\n- Dimensions & Espacements\r\n    \r\n    ```css\r\n    width / height: 100px / 100%;     \r\n    max-width / max-height: 100%;     \r\n    min-width / min-height: 0;        \r\n    \r\n    margin: auto;                     /* Centrage horizontal */\r\n    margin / padding: 1rem;           /* Espaces externes / internes */\r\n    box-sizing: content-box;  /* Par d√©faut (taille exclut padding & border) */\r\n    gap: 1rem;                        /* Espace entre les √©l√©ments (Flex / Grid) */\r\n    \r\n    box-sizing: border-box;           /* G√®re le padding dans la taille r√©elle */\r\n    \r\n    ```\r\n    \r\n- Flexbox\r\n    \r\n    ```css\r\n    display: flex;                              /* Active Flexbox */\r\n    flex-direction: row / column;               /* Sens des √©l√©ments */\r\n    flex-wrap: wrap / nowrap;                   /* Retour √† la ligne */\r\n    \r\n    justify-content:                             /* Alignement horizontal */\r\n      flex-start / center / flex-end / space-between / space-around;\r\n    \r\n    align-items:                                  /* Alignement vertical */\r\n      stretch / center / flex-start / flex-end / baseline;\r\n    \r\n    align-content:                                /* Alignement multi-ligne */\r\n      stretch / center / space-between / space-around;\r\n    align-self: auto / flex-start / flex-end / center;  /* Override align-items pour un √©l√©ment */\r\n    \r\n    flex-grow: 1;                                /* √âtend un √©l√©ment */\r\n    flex-shrink: 0;                              /* Emp√™che le r√©tr√©cissement */\r\n    flex-basis: 200px;                           /* Taille de base de l‚Äô√©l√©ment */\r\n    flex: 1;                                     /* Raccourci pour grow/shrink/basis */\r\n    \r\n    order: 2;                                    /* Change l‚Äôordre d‚Äôaffichage */\r\n    \r\n    ```\r\n    \r\n- Grid\r\n    \r\n    ```css\r\n    display: grid;                                /* Active Grid */\r\n    grid-template-columns: repeat(3, 1fr);        /* 3 colonnes √©gales */\r\n    grid-template-rows: 100px auto;               /* D√©finition des lignes */\r\n    grid-gap / gap: 1rem;                         /* Espace entre lignes/colonnes */\r\n    \r\n    grid-column: 1 / 3;                           /* Occupe les colonnes 1 √† 2 */\r\n    grid-row: 2 / 4;                              /* Occupe les lignes 2 √† 3 */\r\n    \r\n    grid-area: nom;                               /* Nommer une zone */\r\n    grid-template-areas:                          /* Cr√©er une grille nomm√©e */\r\n      \"header header\"\r\n      \"sidebar main\";\r\n      \r\n    grid-auto-rows / grid-auto-columns: taille;     /* Taille des lignes/colonnes automatiques */\r\n    grid-auto-flow: row / column / dense;             /* Ordre placement automatique */\r\n    \r\n    place-items: center;                          /* Centre verticalement & horizontalement */\r\n    justify-items: start / center / end;          /* Aligne chaque cellule horizontalement */\r\n    align-items: stretch / center / end;          /* Aligne chaque cellule verticalement */\r\n    \r\n    ```\r\n    \r\n- Texte\r\n    \r\n    ```css\r\n    font-size: 1rem;                 \r\n    font-weight: bold / normal;      \r\n    text-align: center / left / right;\r\n    text-decoration: none / underline;\r\n    text-transform: uppercase / lowercase / capitalize;\r\n    line-height: 1.5;              /* Hauteur de ligne pour lisibilit√© */\r\n    letter-spacing: 0.05em;        /* Espacement entre caract√®res */\r\n    word-break: break-word;        /* Casse les mots trop longs */\r\n    white-space: nowrap / pre-wrap; /* Gestion des retours √† la ligne */\r\n    color: #333;                   /* Couleur du texte */\r\n    font-family: Arial, sans-serif; /* Police */\r\n    \r\n    ```\r\n    \r\n\r\n# üê≥ DOCKER & DOCKER-COMPOSE\r\n\r\n- üì¶ Images / conteneurs\r\n    \r\n    ```bash\r\n    docker build -t nom .           # Construire image\r\n    docker run -p 3000:3000 nom     # Lancer conteneur\r\n    docker images                   # Lister images\r\n    docker ps / docker ps -a        # Conteneurs en cours / tous\r\n    \r\n    ```\r\n    \r\n- üßπ Nettoyage\r\n    \r\n    ```bash\r\n    docker stop ID                  # Stopper conteneur\r\n    docker rm ID                    # Supprimer conteneur\r\n    docker rmi nom                  # Supprimer image\r\n    \r\n    ```\r\n    \r\n- üìÇ Interagir avec conteneur\r\n    \r\n    ```bash\r\n    docker exec -it ID bash         # Entrer dans conteneur\r\n    docker logs ID                  # Voir logs\r\n    \r\n    ```\r\n    \r\n- üîÑ Docker Compose\r\n    \r\n    ```bash\r\n    docker-compose up               # D√©marrer tout\r\n    docker-compose up -d            # D√©marrer en arri√®re-plan\r\n    docker-compose down             # Arr√™ter tout\r\n    \r\n    ```\r\n    \r\n\r\n# GIT\r\n\r\n- Initialisation et configuration git\r\n    \r\n    ```bash\r\n    git init                         # Cr√©e un nouveau d√©p√¥t Git local dans le dossier courant\r\n    git remote add origin [url]     # Lie ton d√©p√¥t local √† un d√©p√¥t distant (GitHub, GitLab‚Ä¶)\r\n    git add *                        # Ajoute tous les fichiers modifi√©s pour les pr√©parer √† un commit\r\n    git commit -m \"message\"         # Enregistre un snapshot des fichiers ajout√©s avec un message\r\n    git push origin master           # Envoie les commits vers la branche \"master\" du d√©p√¥t distant\r\n    git push origin nom_branche      # Envoie vers une branche sp√©cifique\r\n    git push --force origin nom_branche  # Force le push (attention √† l‚Äôhistorique)\r\n    \r\n    git config --global user.email \"jalias59@outlook.fr\"  # D√©finit ton email Git global (tous les d√©p√¥ts)\r\n    git config --global user.name \"diiablex62\"            # D√©finit ton nom Git global\r\n    \r\n    ```\r\n    \r\n- Gestion des branches\r\n    \r\n    ```bash\r\n    git branch -a                    # Affiche toutes les branches locales et distantes\r\n    git status                       # Affiche la branche actuelle et les modifications locales\r\n    git fetch                        # R√©cup√®re les derni√®res infos du d√©p√¥t distant (sans fusion)\r\n    git pull                         # R√©cup√®re ET fusionne les modifications du d√©p√¥t distant\r\n    git merge [autre_branche]        # Fusionne une branche dans la branche actuelle\r\n    \r\n    ```\r\n    \r\n- Clonage et r√©initialisation\r\n    \r\n    ```bash\r\n    git clone [url]                  # T√©l√©charge une copie compl√®te d‚Äôun d√©p√¥t distant\r\n    rm -rf .git                      # Supprime tout le suivi Git d‚Äôun dossier (remise √† z√©ro)\r\n    \r\n    git fetch origin                 # R√©initialise ton d√©p√¥t local pour correspondre au d√©p√¥t distant puis :\r\n    git reset --hard origin/master   # Commit les modifs\r\n    \r\n    ```\r\n    \r\n- Commandes de navigation terminal\r\n    \r\n    ```bash\r\n    cd [nom du dossier]              # Entre dans un dossier\r\n    cd ..                            # Remonte au dossier parent\r\n    ls                               # Affiche les fichiers/dossiers pr√©sents\r\n    ls -a                            # Affiche aussi les fichiers cach√©s (.git, .env, etc.)\r\n    help                             # Affiche la liste des commandes disponibles dans le terminal\r\n    help [commande]                  # Affiche l‚Äôaide d√©taill√©e d‚Äôune commande sp√©cifique\r\n    \r\n    ```\r\n    \r\n- Gestion des commits\r\n    \r\n    ```bash\r\n    git add .                        # Ajoute tous les fichiers modifi√©s au prochain commit\r\n    git add [fichier]                # Ajoute un fichier sp√©cifique au prochain commit\r\n    git commit --amend               # Modifie le dernier commit (ajout fichiers ou correction du message)\r\n    git reset HEAD~1                 # Annule le dernier commit (garde les fichiers modifi√©s)\r\n    git log                          # Affiche l‚Äôhistorique des commits avec d√©tails\r\n    git revert [commit]              # Cr√©e un commit qui annule un commit pr√©c√©dent (sans r√©√©crire l'historique)\r\n    \r\n    ```\r\n    \r\n- Gestion des tags\r\n    \r\n    ```bash\r\n    git tag                          # Liste tous les tags disponibles\r\n    git tag [nom]                    # Cr√©e un nouveau tag (souvent utilis√© pour marquer une version)\r\n    git push origin [nom_tag]        # Envoie un tag sp√©cifique sur le d√©p√¥t distant\r\n    git tag -d [nom]                 # Supprime un tag localement\r\n    \r\n    ```\r\n    \r\n- Gestion du stash\r\n    \r\n    ```bash\r\n    git stash                         # Sauvegarde les modifications en cours sans les commit (code mis de c√¥t√©)\r\n    git stash list                    # Affiche tous les stash enregistr√©s (code temporairement sauvegard√©)\r\n    git stash apply                   # Restaure le dernier stash (remet les modifs sans le supprimer)\r\n    git stash pop                     # Restaure ET supprime le dernier stash (comme \"coller\" et jeter)\r\n    git stash drop                    # Supprime manuellement le dernier stash (sans l‚Äôappliquer)\r\n    \r\n    ```\r\n    \r\n- Gestion des remotes\r\n    \r\n    ```bash\r\n    git remote -v                    # Affiche la liste des d√©p√¥ts distants associ√©s\r\n    git remote add [nom] [url]       # Ajoute un nouveau d√©p√¥t distant\r\n    git remote remove [nom]          # Supprime un d√©p√¥t distant\r\n    git fetch [remote]               # R√©cup√®re toutes les donn√©es d‚Äôun d√©p√¥t distant (branches, tags‚Ä¶)\r\n    \r\n    ```\r\n    \r\n\r\n# HTML\r\n\r\n- Structure de base\r\n    \r\n    ```html\r\n    <!DOCTYPE html>                                                               <!-- D√©clare le type de document HTML5 -->\r\n    <html lang=\"fr\">                                                              <!-- Racine du document avec langue -->\r\n    <head>                                                                        <!-- En-t√™te : meta, titre, liens CSS -->\r\n      <meta charset=\"UTF-8\">                                                      <!-- Encodage caract√®res -->\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">      <!-- Responsive -->\r\n      <title>Titre de la page</title>                                             <!-- Titre onglet navigateur -->\r\n    </head>\r\n    <body>                                                                        <!-- Corps de la page (contenu visible) -->\r\n    \r\n    </body>\r\n    </html>\r\n    \r\n    ```\r\n    \r\n- Balises de contenu\r\n    \r\n    ```html\r\n    <h1> ‚Ä¶ </h1> √† <h6> ‚Ä¶ </h6>                   <!-- Titres hi√©rarchiques (h1 = plus important) -->\r\n    <p> ‚Ä¶ </p>                                    <!-- Paragraphe de texte -->\r\n    <br>                                          <!-- Saut de ligne simple -->\r\n    <hr>                                          <!-- Ligne horizontale (s√©parateur) -->\r\n    \r\n    <a href=\"url\">Lien</a>                        <!-- Lien cliquable vers une URL -->\r\n    <img src=\"image.jpg\" alt=\"texte alternatif\">  <!-- Image avec texte alternatif -->\r\n    <ul>                                          <!-- Liste non ordonn√©e (puces) -->\r\n      <li>√âl√©ment 1</li>\r\n      <li>√âl√©ment 2</li>\r\n    </ul>\r\n    <ol>                                          <!-- Liste ordonn√©e (num√©rot√©e) -->\r\n      <li>Premier</li>\r\n      <li>Deuxi√®me</li>\r\n    </ol>\r\n    \r\n    ```\r\n    \r\n- Formulaire\r\n    \r\n    ```html\r\n    <form action=\"url\" method=\"post\">  <!-- Formulaire de saisie -->\r\n      <label for=\"nom\">Nom :</label>\r\n      <input type=\"text\" id=\"nom\" name=\"nom\" required>  <!-- Champ texte -->\r\n      <input type=\"email\" name=\"email\" placeholder=\"email@exemple.com\"> <!-- Email -->\r\n      <input type=\"password\" name=\"mdp\">   <!-- Mot de passe -->\r\n      <input type=\"number\" name=\"age\" min=\"0\" max=\"120\" step=\"1\">   <!-- Nombre avec limites -->\r\n      <input type=\"checkbox\" name=\"accept\" required>               <!-- Case √† cocher obligatoire -->\r\n      <input type=\"radio\" name=\"genre\" value=\"M\">                   <!-- Bouton radio -->\r\n      \r\n    <select name=\"pays\">                                         <!-- Liste d√©roulante -->\r\n      <option value=\"fr\">France</option>\r\n      <option value=\"us\">USA</option>\r\n    </select>\r\n    \r\n      \r\n      <textarea name=\"message\" rows=\"4\"></textarea>  <!-- Zone de texte multilignes -->\r\n      \r\n      <button type=\"submit\">Envoyer</button>          <!-- Bouton envoyer -->\r\n    </form>\r\n    \r\n    ```\r\n    \r\n- Autres balises utiles\r\n    \r\n    ```html\r\n    <div> ‚Ä¶ </div>                             <!-- Conteneur g√©n√©rique (block) -->\r\n    <span> ‚Ä¶ </span>                           <!-- Conteneur inline (texte, petite portion) -->\r\n    \r\n    <meta>                                     <!-- M√©tadonn√©es (charset, viewport, SEO‚Ä¶) -->\r\n    <link rel=\"stylesheet\" href=\"style.css\">   <!-- Lien vers CSS externe -->\r\n    <script src=\"script.js\"></script>          <!-- Lien vers fichier JS -->\r\n    \r\n    <header> ‚Ä¶ </header>      <!-- En-t√™te de page ou section -->\r\n    <nav> ‚Ä¶ </nav>            <!-- Menu/navigation -->\r\n    <main> ‚Ä¶ </main>          <!-- Contenu principal -->\r\n    <section> ‚Ä¶ </section>    <!-- Section g√©n√©rique -->\r\n    <article> ‚Ä¶ </article>    <!-- Contenu autonome (article, post) -->\r\n    <footer> ‚Ä¶ </footer>      <!-- Pied de page -->\r\n    \r\n    ```\r\n    \r\n- Texte\r\n    \r\n    ```css\r\n    font-size: 1rem;                 \r\n    font-weight: bold / normal;      \r\n    text-align: center / left / right;\r\n    text-decoration: none / underline;\r\n    text-transform: uppercase / lowercase / capitalize;\r\n    \r\n    ```\r\n    \r\n\r\n# NPM / Node.js\r\n\r\n- Installation / d√©sinstallation\r\n    \r\n    ```bash\r\n    npm init -y                        # Cr√©e rapidement un package.json\r\n    npm install -g [package]           # Installer un package globalement (ex: nodemon)\r\n    npm list --depth=0                 # Voir les packages install√©s au niveau racine\r\n    \r\n    npm install                        # Installe toutes les d√©pendances du projet\r\n    npm install [package] -D           # Installe comme d√©pendance de d√©veloppement\r\n    npm uninstall [package]            # Supprime un package\r\n    \r\n    ```\r\n    \r\n- Ex√©cution / scripts\r\n    \r\n    ```bash\r\n    npm run [script]                   # Ex√©cute un script du package.json\r\n    npm run dev                        # Lance le serveur de dev (ex: vite, next, react‚Ä¶)\r\n    npm run build                      # Lance la compilation pour production\r\n    npm run start                      # D√©marre l'app (souvent backend)\r\n    npm run lint                       # Lancer un linter (exemple)\r\n    npm run test                       # Lancer les tests (exemple)\r\n    \r\n    ```\r\n    \r\n- Maintenance\r\n    \r\n    ```bash\r\n    npm outdated                       # Liste les packages obsol√®tes\r\n    npm update                         # Met √† jour les packages\r\n    npm audit                          # Recherche de vuln√©rabilit√©s dans les packages\r\n    npm audit fix                      # Tente de corriger automatiquement\r\n    \r\n    ```\r\n    \r\n- Ex√©cution ponctuelle\r\n    \r\n    ```bash\r\n    npx [commande]                     # Ex√©cute un package temporairement (sans install)\r\n    npx create-react-app monApp        # Cr√©e un projet React\r\n    npx nodemon fichier.js             # Lancer fichier avec red√©marrage automatique √† chaque modif\r\n    ```\r\n    \r\n- Lancer un fichier Node\r\n    \r\n    ```bash\r\n    node fichier.js                    # Ex√©cute un fichier Node.js\r\n    node --inspect fichier.js          # Debug avec Chrome DevTools\r\n    \r\n    ```\r\n    \r\n\r\n# JAVASCRIPT\r\n\r\n- Ex√©cuter un script JS\r\n    \r\n    ```jsx\r\n    node fichier.js        // Ex√©cute un fichier Node.js en local\r\n    \r\n    ```\r\n    \r\n- Afficher des messages dans la console\r\n    \r\n    ```jsx\r\n    console.log(\"texte\");       // Message classique (debug)\r\n    console.error(\"erreur\");    // Message d‚Äôerreur (rouge)\r\n    console.warn(\"avertisse\");  // Avertissement\r\n    \r\n    ```\r\n    \r\n- Variables et types\r\n    \r\n    ```jsx\r\n    let age = 30;               // Variable modifiable\r\n    const nom = \"Alex\";         // Constante, ne change pas\r\n    var ancien = true;          // Ancienne syntaxe, √©viter\r\n    \r\n    typeof age;                 // Renvoie le type (ex: number)\r\n    \r\n    ```\r\n    \r\n- Fonctions\r\n    \r\n    ```jsx\r\n    // Fonction classique\r\n    function addition(a, b) {\r\n      return a + b;             // Retourne la somme de a et b\r\n    }\r\n    \r\n    // Fonction fl√©ch√©e (plus moderne)\r\n    const multiplier = (a, b) => a * b;\r\n    \r\n    ```\r\n    \r\n- Boucles\r\n    \r\n    ```jsx\r\n    for(let i = 0; i < 5; i++) {\r\n      console.log(i);          // 0 √† 4\r\n    }\r\n    \r\n    array.forEach(item => {\r\n      console.log(item);       // Parcours tableau\r\n    });\r\n    \r\n    for(const item of array) {\r\n      console.log(item);       // Autre syntaxe tableau\r\n    }\r\n    \r\n    ```\r\n    \r\n- Tableaux (listes de donn√©es)\r\n    \r\n    ```jsx\r\n    const fruits = [\"pomme\", \"banane\", \"cerise\"];\r\n    \r\n    fruits.push(\"orange\");                  // Ajout fin\r\n    fruits.pop();                           // Retirer fin\r\n    fruits.shift();                         // Retirer d√©but\r\n    fruits.unshift(\"kiwi\");                 // Ajouter d√©but\r\n    \r\n    const doubles = fruits.map(f => f.length * 2);       // Nouveau tableau modifi√©\r\n    const gros = fruits.filter(f => f.length > 5);       // Filtrage\r\n    const trouve = fruits.find(f => f.startsWith(\"b\"));  // Trouver 1er √©l√©ment\r\n    \r\n    ```\r\n    \r\n- Objets (groupes de propri√©t√©s)\r\n    \r\n    ```jsx\r\n    const personne = {\r\n      nom: \"Alex\",\r\n      age: 30\r\n    };\r\n    \r\n    console.log(personne.nom);    // Affiche \"Alex\"\r\n    personne.ville = \"B√©thune\";  // Ajoute une nouvelle propri√©t√©\r\n    delete personne.age;          // Supprime la propri√©t√© age\r\n    ```\r\n    \r\n- Conditions (faire des choix)\r\n    \r\n    ```jsx\r\n    if(age > 18) {\r\n      console.log(\"Adulte\");\r\n    } else if(age > 12) {\r\n      console.log(\"Adolescent\");\r\n    } else {\r\n      console.log(\"Enfant\");\r\n    }\r\n    ```\r\n    \r\n- Promesses & Async/Await\r\n    \r\n    ```jsx\r\n    // Avec promesses\r\n    fetch(\"url\")\r\n      .then(res => res.json())\r\n      .then(data => console.log(data))\r\n      .catch(err => console.error(err));\r\n    \r\n    // Avec async/await (plus lisible)\r\n    async function getData() {\r\n      try {\r\n        const res = await fetch(\"url\");\r\n        const data = await res.json();\r\n        console.log(data);\r\n      } catch(e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    ```\r\n    \r\n- Expressions r√©guli√®res (Regex), valider ou chercher du texte\r\n    \r\n    ```jsx\r\n    if(age > 18) {\r\n      console.log(\"Adulte\");\r\n    } else if(age > 12) {\r\n      console.log(\"Adolescent\");\r\n    } else {\r\n      console.log(\"Enfant\");\r\n    }\r\n    ```\r\n    \r\n- Liste de Regex\r\n    \r\n    ```jsx\r\n    \r\n    // 1. Valider un email simple (format basique)\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;       // email standard : nom@domaine.ext\r\n    emailRegex.test(\"alex@example.com\");                   // true si valide\r\n    \r\n    // 2. Valider un num√©ro de t√©l√©phone fran√ßais (0 ou +33, suivi de 9 chiffres)\r\n    const phoneRegex = /^(\\+33|0)[1-9](\\d{2}){4}$/;       // ex : 0612345678 ou +33612345678\r\n    phoneRegex.test(\"0612345678\");                         // true si valide\r\n    \r\n    // 3. Valider un mot de passe fort (8+ caract√®res, maj, min, chiffre)\r\n    const pwdRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;  // ex : MotDePasse1\r\n    pwdRegex.test(\"MotDePasse1\");                           // true si valide\r\n    \r\n    // 4. Valider un code postal fran√ßais (5 chiffres)\r\n    const postalCodeRegex = /^\\d{5}$/;                       // ex : 75001\r\n    postalCodeRegex.test(\"75001\");                           // true si valide\r\n    \r\n    // 5. Valider un pseudo simple (lettres, chiffres, underscore, 3-16 caract√®res)\r\n    const usernameRegex = /^[a-z0-9_-]{3,16}$/i;             // ex : alex_62\r\n    usernameRegex.test(\"alex_62\");                            // true si valide\r\n    \r\n    // 6. V√©rifier si une cha√Æne contient uniquement des chiffres\r\n    const digitsOnlyRegex = /^\\d+$/;                          // uniquement des chiffres\r\n    digitsOnlyRegex.test(\"12345\");                            // true si valide\r\n    \r\n    // 7. V√©rifier si une cha√Æne contient uniquement des lettres (sans accent)\r\n    const lettersOnlyRegex = /^[A-Za-z]+$/;                   // uniquement des lettres a-z ou A-Z\r\n    lettersOnlyRegex.test(\"Alex\");                            // true si valide\r\n    \r\n    // 8. Valider une URL simple (http ou https)\r\n    const urlRegex = /^(https?:\\/\\/)?([\\w\\-]+\\.)+[\\w\\-]+(\\/[\\w\\-./?%&=]*)?$/i; \r\n    // ex: https://exemple.com/page\r\n    urlRegex.test(\"https://exemple.com/page\");                // true si valide\r\n    \r\n    // 9. Valider une date au format YYYY-MM-DD (simple)\r\n    const dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;                  // ex : 2025-07-03\r\n    dateRegex.test(\"2025-07-03\");                             // true si valide\r\n    \r\n    // 10. V√©rifier s‚Äôil y a un espace dans une cha√Æne\r\n    const spaceRegex = /\\s/;                                   // d√©tecte au moins un espace\r\n    spaceRegex.test(\"hello world\");                            // true si il y a un espace\r\n    \r\n    // 11. Trouver une adresse IP IPv4 simple\r\n    const ipv4Regex = /^(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)){3}$/;\r\n    ipv4Regex.test(\"192.168.0.1\");                            // true si valide\r\n    \r\n    // 12. Extraire les hashtags dans un texte (ex: #fun #js)\r\n    const hashtagRegex = /#(\\w+)/g;                            // global match hashtags\r\n    \"J‚Äôadore #JavaScript et #coding\".match(hashtagRegex);     // [\"#JavaScript\", \"#coding\"]\r\n    \r\n    ```\r\n    \r\n- Modules ES6+ (organiser ton code en fichiers)\r\n    \r\n    ```jsx\r\n    // Dans module.js\r\n    export const maFonction = () => {\r\n      console.log(\"Hello\");\r\n    };\r\n    \r\n    // Dans main.js\r\n    import { maFonction } from \"./module.js\";\r\n    maFonction();  // Affiche \"Hello\"\r\n    ```\r\n    \r\n\r\n# LINUX / TERMINAL / BASH\r\n\r\n- üìÅ Fichiers & dossiers\r\n    \r\n    ```bash\r\n    ls                     # Lister contenu dossier\r\n    ls -a                  # Inclure fichiers cach√©s\r\n    cd dossier/            # Aller dans un dossier\r\n    cd ..                  # Revenir en arri√®re\r\n    pwd                    # Affiche chemin actuel\r\n    \r\n    mkdir dossier          # Cr√©er dossier\r\n    touch fichier.txt      # Cr√©er fichier vide\r\n    rm fichier.txt         # Supprimer fichier\r\n    rm -rf dossier/        # Supprimer dossier r√©cursivement\r\n    \r\n    ls -lh                      # Liste d√©taill√©e avec taille lisible (Ko, Mo)\r\n    tree                        # Affiche l‚Äôarborescence (√† installer)\r\n    ```\r\n    \r\n- üì¶ Copier / D√©placer / Renommer\r\n    \r\n    ```bash\r\n    cp fichier.txt copie.txt       # Copier fichier\r\n    cp -r dossier/ copie/          # Copier un dossier entier\r\n    mv fichier dossier/            # D√©placer fichier\r\n    mv ancien.txt nouveau.txt      # Renommer fichier\r\n    rsync -av source/ dest/     # Synchroniser dossiers (copie efficace)\r\n    ```\r\n    \r\n- üîê Permissions / Ex√©cution\r\n    \r\n    ```bash\r\n    chmod +x script.sh             # Rendre ex√©cutable\r\n    chown user:group fichier       # Changer propri√©taire\r\n    ./script.sh                    # Ex√©cuter script bash\r\n    chmod 755 fichier           # rwxr-xr-x : propri√©taire full, groupe + autres lecture/exec\r\n    chmod 644 fichier           # rw-r--r-- : lecture/√©criture propri√©taire, lecture autres\r\n    ```\r\n    \r\n- üîé Recherche & fichiers\r\n    \r\n    ```bash\r\n    grep \"mot\" fichier.txt         # Rechercher mot\r\n    find . -name \"*.js\"            # Trouver fichiers JS\r\n    grep -r \"mot\" ./            # Recherche r√©cursive dans dossier\r\n    ```\r\n    \r\n- üåê R√©seau & transfert\r\n    \r\n    ```bash\r\n    ping google.com                # Tester connexion\r\n    curl https://site.com          # Requ√™te HTTP simple\r\n    wget https://site.com/fichier # T√©l√©charger fichier HTTP\r\n    scp fichier user@host:/chemin # Copier fichier vers serveur distant (SSH)\r\n    ```\r\n    \r\n- üì¶ Archive / compression\r\n    \r\n    ```bash\r\n    tar -czf archive.tar.gz dossier/   # Compresser\r\n    tar -xzf archive.tar.gz            # D√©compresser\r\n    \r\n    ```\r\n    \r\n- üß† Processus\r\n    \r\n    ```bash\r\n    ps aux                     # Liste des processus\r\n    kill -9 PID                # Tuer un processus\r\n    top                        # Surveillance syst√®me en direct\r\n    htop                        # Version am√©lior√©e de top (√† installer)\r\n    ```\r\n    \r\n\r\n# ‚öõÔ∏è REACT\r\n\r\n- Supprimer Node module et package\r\n    \r\n    ```jsx\r\n    rm -rf node_modules package-lock.json\r\n    ```\r\n    \r\n- R√©installer d√©pendance\r\n    \r\n    ```jsx\r\n    npm i\r\n    ```\r\n    \r\n- G√©n√©rer une Secret key\r\n    \r\n    ```jsx\r\n    node -e \"const crypto = require('crypto'); console.log(crypto.randomBytes(64).toString('hex'))\"\r\n    ```\r\n    \r\n\r\n# ‚öõÔ∏è REACT HOOKS\r\n\r\n- üì¶ √âtat & effets\r\n    \r\n    ```jsx\r\n    const [val, setVal] = useState(\"\");     // √âtat local\r\n    useEffect(() => {}, []);                // Code au chargement\r\n    useLayoutEffect(() => {}, []);  // Comme useEffect mais bloque le rendu jusqu‚Äô√† ex√©cution\r\n    useDebugValue(value);           // Pour afficher une valeur dans React DevTools (debug)\r\n    ```\r\n    \r\n- üìç R√©f√©rences & m√©moire\r\n    \r\n    ```jsx\r\n    const inputRef = useRef(null);          // R√©f√©rencer un √©l√©ment\r\n    const total = useMemo(() => ..., [val]); // M√©moriser un calcul\r\n    const cb = useCallback(() => ..., []);  // M√©moriser une fonction\r\n    \r\n    ```\r\n    \r\n- üåê Contexte & Reducer\r\n    \r\n    ```jsx\r\n    const value = useContext(UserContext);  // Acc√®s au contexte global\r\n    const [state, dispatch] = useReducer(reducer, init); // Gestion d'√©tat complexe\r\n    ```\r\n    \r\n\r\n# REACT NATIVE - EXPO GO\r\n\r\n- Expo Go installation\r\n    \r\n    ```bash\r\n    npx expo start                   # D√©marrer Expo Go (serveur local)\r\n    npx expo start --tunnel          # Partager en ligne (tunnel)\r\n    npx expo start --tunnel -c       # Tunnel + vider cache\r\n    npx expo start --android         # D√©marrer Android\r\n    npx expo start --tunnel --android # Tunnel + Android\r\n    npx expo start --clear           # Vider cache uniquement\r\n    npm start -- --reset-cache       # Reset cache avec npm\r\n    npx expo start --dev-client      # Mode d√©veloppement avec dev client\r\n    npx expo doctor                  # V√©rifier la config Expo\r\n    npx expo install                 # Installer d√©pendances Expo\r\n    npx expo optimize                # Optimiser assets\r\n    npx expo publish                 # Publier assets\r\n    ```\r\n    \r\n- Expo Go vider cache + r√©installation\r\n    \r\n    ```bash\r\n    rm -rf node_modules              # Supprimer node_modules\r\n    rm package-lock.json             # Supprimer lockfile\r\n    npm i                           # R√©installer les d√©pendances\r\n    npx expo start -c                # D√©marrer avec cache vid√©\r\n    ```\r\n    \r\n- Cr√©ation du fichier APK\r\n    \r\n    ```bash\r\n    npm install -g eas-cli           # Installer EAS CLI (une fois)\r\n    npx eas login                   # Se connecter Expo (une fois)\r\n    npx eas build:configure          # Configurer projet (une fois)\r\n    npx eas build --platform android --profile development   # Build APK dev\r\n    ```\r\n    \r\n- **Mise √†¬†jour en¬†ligne (pour¬†corriger¬†des bugs)**\r\n    \r\n    ```bash\r\n    # 1. Installer EAS CLI (si pas d√©j√† fait)\r\n    npm install -g eas-cli\r\n    \r\n    # 2. Se connecter √† Expo (si pas d√©j√† fait)\r\n    npx eas login\r\n    \r\n    # 3. Configurer le projet (si pas d√©j√† fait)\r\n    npx eas build:configure\r\n    \r\n    # 4. Cr√©er un build initial (UNE SEULE FOIS)\r\n    npx eas build --platform android --profile production\r\n    \r\n    # 5. Mettre √† jour en ligne (POUR CHAQUE CORRECTION) \r\n    npx eas update --branch production --message \"profil\"\r\n    ```\r\n    \r\n- Commande pour Android Studio\r\n    \r\n    ```bash\r\n    # 1. G√©n√©rer le projet Android natif\r\n    npx expo prebuild --platform android\r\n    \r\n    # 2. Ouvrir dans Android Studio\r\n    npx expo run:android --android\r\n    \r\n    # 3. Nettoyer le projet Android\r\n    npx expo prebuild --platform android --clean\r\n    \r\n    # 4. G√©n√©rer avec configuration sp√©cifique\r\n    npx expo prebuild --platform android --config app.config.js\r\n    \r\n    # 5. Build debug avec Gradle\r\n    ./gradlew assembleDebug\r\n    \r\n    # 6. Build release avec Gradle\r\n    ./gradlew assembleRelease\r\n    \r\n    # 7. Installer l'APK sur l'appareil\r\n    ./gradlew installDebug\r\n    \r\n    # 8. Nettoyer le build\r\n    ./gradlew clean\r\n    \r\n    # 9. Voir les t√¢ches disponibles\r\n    ./gradlew tasks\r\n    \r\n    # 10. Build bundle pour Play Store\r\n    ./gradlew bundleRelease\r\n    ```\r\n    \r\n\r\n# üóÉÔ∏è SQL\r\n\r\n- üìÇ Connexion & BDD\r\n    \r\n    ```sql\r\n    mysql -u root -p               -- Connexion MySQL\r\n    psql -U postgres               -- Connexion Postgres\r\n    CREATE DATABASE nom;           -- Cr√©er BDD\r\n    USE nom;                       -- S√©lectionner\r\n    \r\n    ```\r\n    \r\n- üèóÔ∏è Cr√©ation de table & insertion\r\n    \r\n    ```sql\r\n    CREATE TABLE users (...);      -- Cr√©er une table\r\n    INSERT INTO users (...) VALUES (...); -- Ajouter une ligne\r\n    ```\r\n    \r\n- üîê Contraintes / Int√©grit√©\r\n    \r\n    ```sql\r\n    PRIMARY KEY;           -- Identifiant unique d‚Äôune table\r\n    FOREIGN KEY;           -- Lien vers cl√© primaire d‚Äôune autre table\r\n    UNIQUE;                -- Valeur unique dans la colonne\r\n    NOT NULL;              -- Valeur obligatoire, pas de NULL autoris√©\r\n    DEFAULT valeur;        -- Valeur par d√©faut si non pr√©cis√©e\r\n    ```\r\n    \r\n- üîÑ Gestion des transactions / Atomicit√©\r\n    \r\n    ```sql\r\n    START TRANSACTION;                    -- D√©but de transaction\r\n    UPDATE comptes SET solde = solde - 100 WHERE id = 1;\r\n    UPDATE comptes SET solde = solde + 100 WHERE id = 2;\r\n    COMMIT;                             -- Valide les changements\r\n    ROLLBACK;                           -- Annule la transaction (en cas d‚Äôerreur)\r\n    ```\r\n    \r\n- üîê Contraintes / Int√©grit√©\r\n    \r\n    ```sql\r\n    PRIMARY KEY;           -- Identifiant unique d‚Äôune table\r\n    FOREIGN KEY;           -- Lien vers cl√© primaire d‚Äôune autre table\r\n    UNIQUE;                -- Valeur unique dans la colonne\r\n    NOT NULL;              -- Valeur obligatoire, pas de NULL autoris√©\r\n    DEFAULT valeur;        -- Valeur par d√©faut si non pr√©cis√©e\r\n    ```\r\n    \r\n- üìà Optimisation / Performance\r\n    \r\n    ```sql\r\n    CREATE INDEX idx_nom ON pays(nom);    -- Cr√©e un index sur la colonne 'nom' pour acc√©l√©rer les recherches\r\n    DROP INDEX idx_nom ON pays;           -- Supprime cet index\r\n    ```\r\n    \r\n- üí£ Suppression\r\n    \r\n    ```sql\r\n    DROP TABLE users;\r\n    DROP DATABASE nom;\r\n    \r\n    ```\r\n    \r\n- Types / Structure de donn√©es\r\n    \r\n    ```sql\r\n    -- üè∑Ô∏è Types de donn√©es courants\r\n    INT, VARCHAR(255), TEXT, DATE, BOOLEAN, FLOAT, DOUBLE;\r\n    ```\r\n    \r\n- Lecture de donn√©es (SELECT)\r\n    \r\n    ```sql\r\n        -- Voir tout\r\n        SELECT * FROM pays;\r\n        \r\n        -- Voir certaines colonnes\r\n        SELECT nom, population FROM pays;\r\n        \r\n        -- Avec condition\r\n        SELECT nom FROM pays WHERE population > 100000000;\r\n    ```\r\n    \r\n- Ajout de donn√©es (INSERT)\r\n    \r\n    ```sql\r\n        -- Ajouter un pays\r\n        INSERT INTO pays (nom, code_iso, population) \r\n        VALUES ('Monaco', 'MC', 39000);\r\n    \r\n    ```\r\n    \r\n- Modification de donn√©es (UPDATE)\r\n    \r\n    ```sql\r\n      -- Changer la population\r\n        UPDATE pays SET population = 70000000 WHERE nom = 'France';\r\n    ```\r\n    \r\n- Suppression de donn√©es (DELETE)\r\n    \r\n    ```sql\r\n     -- Supprimer un pays\r\n        DELETE FROM pays WHERE nom = 'Atlantide';\r\n    ```\r\n    \r\n- Jointures entre tables (JOIN)\r\n    \r\n    ```sql\r\n    -- Voir pays et leurs capitales\r\n    SELECT pays.nom, capitales.nom \r\n    FROM pays \r\n    JOIN capitales ON pays.id = capitales.id_pays;\r\n    \r\n    -- üîó Types de jointures\r\n    -- INNER JOIN : r√©cup√®re uniquement les correspondances dans les deux tables\r\n    -- LEFT JOIN  : r√©cup√®re toutes les lignes de gauche + correspondances droite (NULL sinon)\r\n    -- RIGHT JOIN : r√©cup√®re toutes les lignes de droite + correspondances gauche (NULL sinon)\r\n    \r\n    SELECT p.nom, c.nom \r\n    FROM pays p\r\n    LEFT JOIN capitales c ON p.id = c.id_pays;\r\n    \r\n    SELECT p.nom, c.nom \r\n    FROM pays p\r\n    RIGHT JOIN capitales c ON p.id = c.id_pays;\r\n    \r\n    ```\r\n    \r\n- Fonctions d\\'agr√©gation\r\n    \r\n    ```sql\r\n     -- Compter\r\n        SELECT COUNT(*) FROM pays;\r\n        \r\n        -- Moyenne\r\n        SELECT AVG(population) FROM pays;\r\n        \r\n        -- Plus grand/petit\r\n        SELECT MAX(population), MIN(population) FROM pays;\r\n    ```\r\n    \r\n- Tri et limitation\r\n    \r\n    ```sql\r\n     -- Trier (A‚ÜíZ)\r\n        SELECT nom FROM pays ORDER BY nom;\r\n        \r\n        -- Trier (Z‚ÜíA)\r\n        SELECT nom FROM pays ORDER BY nom DESC;\r\n        \r\n        -- Les 5 premiers\r\n        SELECT nom FROM pays LIMIT 5;\r\n    ```\r\n    \r\n- Recherche et filtrage\r\n    \r\n    ```sql\r\n       -- Commence par 'F'\r\n        SELECT nom FROM pays WHERE nom LIKE 'F%';\r\n        \r\n        -- Entre deux valeurs\r\n        SELECT nom FROM pays WHERE population BETWEEN 10000000 AND 50000000;\r\n    ```\r\n    \r\n- Groupement de donn√©es\r\n    \r\n    ```sql\r\n      -- Nombre de pays par continent\r\n        SELECT continent, COUNT(*) \r\n        FROM pays \r\n        GROUP BY continent;\r\n    ```\r\n    \r\n- Alias (renommage)\r\n    \r\n    ```sql\r\n      -- Donner un nom plus court\r\n        SELECT capitales.nom AS capitale, pays.nom AS pays_nom\r\n        FROM pays \r\n        JOIN capitales ON pays.id = capitales.id_pays;\r\n        \r\n        -- Raccourcir les noms de tables\r\n        SELECT p.nom, c.nom \r\n        FROM pays p\r\n        JOIN capitales c ON p.id = c.id_pays;\r\n    ```\r\n    \r\n- Suppression des doublons (DISTINCT)\r\n    \r\n    ```sql\r\n      -- Voir les langues uniques d'Afrique (sans r√©p√©tition)\r\n        SELECT DISTINCT l.nom \r\n        FROM langues l\r\n        JOIN pays_langues pl ON l.id = pl.id_langue\r\n        JOIN pays p ON pl.id_pays = p.id\r\n        WHERE p.continent = 'Afrique';\r\n    ```\r\n    \r\n- Sous requ√™tes\r\n    \r\n    ```sql\r\n     -- Pays d'Europe avec sous-requ√™te\r\n        SELECT nom \r\n        FROM pays \r\n        WHERE id_continent = (\r\n            SELECT id FROM continents WHERE nom = 'Europe'\r\n        );\r\n        \r\n        -- Insertion avec sous-requ√™te\r\n        INSERT INTO capitales (nom, id_pays) \r\n        VALUES ('Berne', (SELECT id FROM pays WHERE nom = 'Suisse'));\r\n    ```\r\n    \r\n- Fonctions avanc√©es\r\n    \r\n    ```sql\r\n        -- Arrondir un nombre\r\n        SELECT ROUND(AVG(population)) FROM pays;\r\n        \r\n        -- Filtrer apr√®s GROUP BY\r\n        SELECT continent, COUNT(*) \r\n        FROM pays \r\n        GROUP BY continent \r\n        HAVING COUNT(*) > 5;\r\n    ```\r\n    \r\n- # Aide-m√©moire\r\n    \r\n    ```sql\r\n    **üí° Astuce** : Commence toujours par `SELECT * FROM nom_table;` pour voir ce qu'il y a dans ta table !\r\n    \r\n    ## Les 4 actions principales √† retenir :\r\n    1. **SELECT** = Lire/Voir\r\n    2. **INSERT** = Ajouter \r\n    3. **UPDATE** = Modifier\r\n    4. **DELETE** = Supprimer\r\n    \r\n    ## Ordre des mots dans une requ√™te :\r\n    ```sql\r\n    SELECT ...\r\n    FROM ...\r\n    WHERE ...\r\n    ORDER BY ...\r\n    LIMIT ...\r\n    ```\r\n\r\n    # CDA 2025 (Apprenant)\r\n\r\n## JavaScript\r\n\r\n[EXO JS](https://www.notion.so/EXO-JS-22ad500055d681f19555dd84db4a62a7?pvs=21)\r\n\r\n[Requ√™te HTTP - Async Await - bloc Try Catch Finally - le DOM](https://www.notion.so/Requ-te-HTTP-Async-Await-bloc-Try-Catch-Finally-le-DOM-22ad500055d681ad8402c452c565f717?pvs=21)\r\n\r\n## React\r\n\r\n[Introduction √† React](https://www.notion.so/Introduction-React-22ad500055d681b7aed1ff948b04dc14?pvs=21)\r\n\r\n[Explication de la structure](https://www.notion.so/Explication-de-la-structure-22ad500055d681cd82ffeea59215dd3a?pvs=21)\r\n\r\n[Comment fonctionne React ?](https://www.notion.so/Comment-fonctionne-React-22ad500055d68152a325eca131f95db7?pvs=21)\r\n\r\n[Css & Sass avec React](https://www.notion.so/Css-Sass-avec-React-22ad500055d681e3a8bce3c32fb8cb47?pvs=21)\r\n\r\n[Tailwind & React](https://www.notion.so/Tailwind-React-22ad500055d681e2bd57ed5c3bcab89c?pvs=21)\r\n\r\n[React - Les listes](https://www.notion.so/React-Les-listes-22ad500055d681a294c0c714804aeb1a?pvs=21)\r\n\r\n[React - le rendu conditionnel](https://www.notion.so/React-le-rendu-conditionnel-22ad500055d68191a66ff231d25d9775?pvs=21)\r\n\r\n[React - cas d‚Äôutilisation de useState](https://www.notion.so/React-cas-d-utilisation-de-useState-22ad500055d681f2ab11f57d26959d14?pvs=21)\r\n\r\n[Diff√©rentes fa√ßons d‚Äôinvoquer une fonction](https://www.notion.so/Diff-rentes-fa-ons-d-invoquer-une-fonction-22ad500055d6816b8aa5e30fe3ebb570?pvs=21)\r\n\r\n[Modification des tableaux et des objets avec useState](https://www.notion.so/Modification-des-tableaux-et-des-objets-avec-useState-22ad500055d68172b9dcf8d124c94774?pvs=21)\r\n\r\n[Formulaire de base](https://www.notion.so/Formulaire-de-base-22ad500055d6819f977bf6e317351dd6?pvs=21)\r\n\r\n[Le hook useEffect](https://www.notion.so/Le-hook-useEffect-22ad500055d681b4a05cc4a04282b208?pvs=21)\r\n\r\n[Le contexte avec React](https://www.notion.so/Le-contexte-avec-React-22ad500055d681388467e2b791e97eca?pvs=21)\r\n\r\n[Validation des entr√©es](https://www.notion.so/Validation-des-entr-es-22ad500055d681f99bb5e772fd008d78?pvs=21)\r\n\r\n[Formulaire dynamique](https://www.notion.so/Formulaire-dynamique-22ad500055d6811bbe7bce24262d3e7b?pvs=21)\r\n\r\n[Le routing avec React](https://www.notion.so/Le-routing-avec-React-22ad500055d68173b998e795e6648c53?pvs=21)\r\n\r\n[Le Dark Mode avec Tailwind](https://www.notion.so/Le-Dark-Mode-avec-Tailwind-22ad500055d6810b8bdedfc5e86861b2?pvs=21)\r\n\r\n[Les tests unitaires](https://www.notion.so/Les-tests-unitaires-22ad500055d68188b364f2467151f349?pvs=21)\r\n\r\n[Web Socket - mise en place frontend](https://www.notion.so/Web-Socket-mise-en-place-frontend-22ad500055d68139b4cbc6e50a884943?pvs=21)\r\n\r\n## Exo React\r\n\r\n[Exo Condition - hook useState - onClick](https://www.notion.so/Exo-Condition-hook-useState-onClick-22ad500055d681f4892ec037cfbb112f?pvs=21)\r\n\r\n[Exo - utilisation du useState](https://www.notion.so/Exo-utilisation-du-useState-22ad500055d6812182f8e37f0b6eade0?pvs=21)\r\n\r\n[Exo useState - Tableaux et objets](https://www.notion.so/Exo-useState-Tableaux-et-objets-22ad500055d68198b214d8a2ca0aabc9?pvs=21)\r\n\r\n[React ‚Üí Forms & Hook](https://www.notion.so/React-Forms-Hook-22ad500055d6810daedefd7dc29b4c82?pvs=21)\r\n\r\n[Correction Exo Hook Form](https://www.notion.so/Correction-Exo-Hook-Form-22ad500055d681cd94e8cae275eaa687?pvs=21)\r\n\r\n[Exo Context](https://www.notion.so/Exo-Context-22ad500055d68102a695f9f573217a46?pvs=21)\r\n\r\n## Node\r\n\r\n[Introduction √† Node - Express et au routing](https://www.notion.so/Introduction-Node-Express-et-au-routing-22ad500055d68178b85cf5d47ecda5fb?pvs=21)\r\n\r\n[Connexion √† la base de donn√©es, mongoose et Liaison front-back](https://www.notion.so/Connexion-la-base-de-donn-es-mongoose-et-Liaison-front-back-22ad500055d681d8aac6e0e637be932c?pvs=21)\r\n\r\n[Json Web Token (JWT)](https://www.notion.so/Json-Web-Token-JWT-22ad500055d681559702de02872d2a07?pvs=21)\r\n\r\n[Envoi de mail - Inscription](https://www.notion.so/Envoi-de-mail-Inscription-22ad500055d681ea85eafa36dd4f9e3c?pvs=21)\r\n\r\n[Les middlewares](https://www.notion.so/Les-middlewares-22ad500055d6811aaaa6f05467b1248d?pvs=21)\r\n\r\n[D√©ploiement full-stack avec Render](https://www.notion.so/D-ploiement-full-stack-avec-Render-22ad500055d681b99bfcf81222d29d18?pvs=21)\r\n\r\n[Web Socket - Mise en place Serveur - Authentification - Cloudinary](https://www.notion.so/Web-Socket-Mise-en-place-Serveur-Authentification-Cloudinary-22ad500055d68127ab2cd9bd39e284b5?pvs=21)\r\n\r\n## Conception\r\n\r\n[Cas d√©taill√©s & UserStories](https://www.notion.so/Cas-d-taill-s-UserStories-22ad500055d681a8bb62cd291d8a8a6f?pvs=21)\r\n\r\n[Initiation √† la m√©thode SCRUM](https://www.notion.so/Initiation-la-m-thode-SCRUM-22ad500055d6817eb81af4061968af3c?pvs=21)\r\n\r\n[Guide complet du cahier des charges pour un projet Web](https://www.notion.so/Guide-complet-du-cahier-des-charges-pour-un-projet-Web-22ad500055d68197a9a7f40eea837f54?pvs=21)\r\n\r\n[Diagramme UML - cas d‚Äôutilisation](https://www.notion.so/Diagramme-UML-cas-d-utilisation-22ad500055d68145a7cacfdcdb4c1318?pvs=21)\r\n\r\n[Analyser les besoins en base de donn√©es.](https://www.notion.so/Analyser-les-besoins-en-base-de-donn-es-22ad500055d68179bf4cd7da06b41a22?pvs=21)\r\n\r\n[Git](https://www.notion.so/Git-22ad500055d6812f8b15d7e3086fbab4?pvs=21)\r\n\r\n## R√©vision\r\n\r\n[R√©vision 25 mars](https://www.notion.so/R-vision-25-mars-22ad500055d6813c8ba8f78f01ba6710?pvs=21)\r\n\r\n[R√©vision 31 mars](https://www.notion.so/R-vision-31-mars-22ad500055d681d59036e0912a1bab98?pvs=21)\r\n\r\n[R√©vision Backend](https://www.notion.so/R-vision-Backend-22ad500055d681d89836c555e399d690?pvs=21)\r\n\r\n## Evaluation\r\n\r\n[Evaluation React & Tailwind](https://www.notion.so/Evaluation-React-Tailwind-22ad500055d681a3ab55c615b6117490?pvs=21)\r\n\r\n[Correction Tailwind](https://www.notion.so/Correction-Tailwind-22ad500055d681f19b92ed1f36fc2f46?pvs=21)\r\n\r\n[Evaluation Web - SQL](https://www.notion.so/Evaluation-Web-SQL-22ad500055d681c29a05cd3d60b02792?pvs=21)\r\n\r\n## React Native\r\n\r\n[Les bases](https://www.notion.so/Les-bases-22ad500055d681b69fb4cac646aea7fa?pvs=21)\r\n\r\n[Le Design System](https://www.notion.so/Le-Design-System-22ad500055d68187a06cd3b3b3530817?pvs=21)\r\n\r\n[La navigation](https://www.notion.so/La-navigation-22ad500055d6818194c6e1efdbb25562?pvs=21)\r\n\r\n[L‚Äô√©tat global](https://www.notion.so/L-tat-global-22ad500055d681bfb06bd46ae7d75c6b?pvs=21)\r\n\r\n[Les formulaires](https://www.notion.so/Les-formulaires-22ad500055d681acbb00cfdb5995bec3?pvs=21)\r\n\r\n[Les requ√™tes HTTP](https://www.notion.so/Les-requ-tes-HTTP-22ad500055d68195b25de4133ae9d191?pvs=21)\r\n\r\n## Full Stack\r\n\r\n[Impl√©mentation des Sockets](https://www.notion.so/Impl-mentation-des-Sockets-22ad500055d681dbb6d6cf1d285086e5?pvs=21)\r\n\r\n## Base de donn√©es\r\n\r\n[Le SQL ](https://www.notion.so/Le-SQL-22ad500055d681a38321ea93db9353ea?pvs=21)"
}